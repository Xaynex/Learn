# Задача 1. Таблица степеней
# numbers = [3,7,5]
#
# while True:
#
#  number = int(input('Новое число: '))
#
#  numbers.append(number)
#
#  print('Текущий список чисел:', numbers)
#
#  for i in numbers:
#
#    print(i ** 2, i ** 3, i ** 4)
#
#  print()

# Задача 2. Очень простая задача
# У вас есть список numbers. Напишите программу, которая заполняет список числами от 0 до 100 и выводит его на экран.

# numbers=[]
# for i in range(100):
#  numbers.append(i)
# print(numbers)
#
# Задача 3. Контроль

# N = int(input('введите количество сотрудников в офисе '))
# ID = []
# for _ in range(N):
#     a = int(input('введите ID сотрудника '))
#     ID.append(a)
#
# search = int(input('какой ID ищем? '))
#
# for i in ID:
#     if search == i:
#         print('сотрудник на месте')
#         break
# else:
#     print('сотрудника нет на месте')

# ===============================================================================================
# Задача 1. Гугл
# nums_list = []
#
# N = int(input('Кол-во чисел в списке: '))
#
# for _ in range(N):
#     num = int(input('Очередное число: '))
#
#     nums_list.append(num)
#
# maximum = 0
#
# minimum = nums_list[0]
#
# for i in nums_list:
#
#     if maximum < i:
#         maximum = i
#
#     if i < minimum:
#         minimum = i
#
# print('Максимальное число в списке:', maximum)
#
# print('Минимальное число в списке:', minimum)

# Задача 2. Кратность
# Пользователь вводит список из N чисел и число K. Напишите код,
# выводящий на экран сумму индексов элементов списка, которые кратны K.
#
# Пример:
# Кол-во чисел в списке: 4
# Введите 1 число: 1
# Введите 2 число: 20
# Введите 3 число: 30
# Введите 4 число: 4
#
# Введите делитель: 10
#
# Индекс числа 20: 1
# Индекс числа 30: 2
# Сумма индексов: 3

# N=int(input('введите количество чисел в списке '))
# list=[]
# sum=0
# ii=-1
# for i in range(N):
#     print('введите', i+1, end='')
#     a=int(input(' число '))
#     list.append(a)
# dev=int(input('\nвведите делитель '))
# for i in list:
#     ii+=1
#     if i%dev==0:
#         print('индекс числа',list[ii] ,ii,)
#         sum=sum+ii
# print('сумму индексов: ', sum)


# dogs_list = []
#
# N = int(input('Кол-во собак в списке: '))
#
# for i in range(N):
#     print('очки',i+1,end='')
#     num = int(input(' собаки : '))
#     dogs_list.append(num)
#
# index=0
# maximum = 0
# minimum = dogs_list[index]
# max_index=0
# min_index=0
# for i in dogs_list:
#     index+=1
#     if maximum < i:
#         maximum = i
#         max_index=index
#     if i <= minimum:
#         minimum = i
#         min_index=index
#
# print('максимальное коичество очков у',max_index, 'собаки',maximum )
# print('минимальное коичество очков у',min_index, 'собаки',minimum )
#
# dogs_list[max_index-1]=minimum
# dogs_list[min_index-1]=maximum
#
# print(dogs_list)

# ===============================================================================================
# Задача 1. Текстовый редактор: возвращение
# S = input('введите строку ')
# Snew=[]
# count = 0
# for i in S:
#     if i == ':':
#         count+=1
#         Snew+=';'
#     else:
#         Snew+=i
# for i in range(len(Snew)):
#     print(Snew[i], end='')
#
# print('\nколичество замен', count)


# Задача 2. Соседи
# def check(stroka,sym):
#     reast=''
#     count=-1
#     for i in stroka:
#         if i==stroka[sym]:
#             count+=1
#
#     return  count
#
# stroka=input('введите строку ')
# sym=int(input('введите номер символа '))
#
# print('этот символ', stroka[sym-1])
# print('символ слева', stroka[sym-2])
# print('символ справа', stroka[sym])
#
# print('повторяющихся символов',check(stroka,sym-1))


# Введите 1 слово: я
# Введите 2 слово: год
# Введите 3 слово: лучший
#
# Слово из текста: этот
# Слово из текста: год
# Слово из текста: -
# Слово из текста: лучший
# Слово из текста: год
#
# Подсчёт слов в тексте
# я: 0

# print('введите 3 слова')
# search=[]
# for i in range(3):
#     print('введите слово ', end='')
#     word=input()
#     search.append(word)
# print(search)
#
# text=[]
# print('слово из текста ', end='')
# word2 = input()
# text.append(word2)
# while word2 != 'end':
#     print('слово из текста ', end='')
#     word2 = input()
#     text.append(word2)
# print(text)
#
# print('Подсчёт слов в тексте')
# count=0
# for ii in range(len(search)):
#     for i in range(len(text)):
#         if search[ii]==text[i]:
#             count =count+1
#     print(search[ii], ': ',count)
#     count=0
# ===============================================================================================
# Что нужно сделать
# Задача 1. Генерация списка
# Дано целое число N. Напишите программу, которая формирует список из нечётных чисел от 1 до N.

# N=int(input('введите число '))
# spisok=[]
# for i in range(1,N,2):
#     spisok.append(i)
#
# print(spisok)
# Задача 2. Турнир
# Для турнира по волейболу необходимо сформировать турнирную сетку из восьми человек на два дня.
# На первый день из списка участников решили выбрать каждого второго.
# Дан список из восьми имён: Артемий, Борис, Влад, Гоша, Дима, Евгений, Женя, Захар.
# Напишите программу, которая выводит элементы списка только с чётными индексами.

# first=['Артемий', 'Борис', 'Влад', 'Гоша', 'Дима', 'Евгений', 'Женя', 'Захар']
# second=[]
# for i in range(1,len(first),2):
#     second.append(first[i])
#
# print(second)

# Задача 3. Клетки
# В научной лаборатории выводят и тестируют новые виды клеток.
# Есть список из N этих клеток, где элемент списка — это показатель эффективности, а индекс списка — это ранг клетки.
# Учёные отбирают клетки по следующему принципу: если эффективность клетки меньше её ранга, то эта клетка не подходит.
# Напишите программу, которая выводит на экран те элементы списка, значения которых меньше их индекса.

# Кол-во клеток: 5
# Эффективность 1 клетки: 3
# Эффективность 2 клетки: 0
# Эффективность 3 клетки: 6
# Эффективность 4 клетки: 2
# Эффективность 5 клетки: 10
#
#
# Неподходящие значения: 0 2

# N=int(input('введите количество клеток '))
# cells=[]
# bad=[]
# for index in range(1,N+1):
#     print('эффективность', index,'клетки ',end='')
#     effect = int(input())
#     cells.append(effect)
#     if effect<index:
#         bad.append(cells[index-1])
#
# print('неподходящие значения ',bad)

# Задача 4. Видеокарты
# В базе одного магазина электроники есть список видеокарт компании NVIDIA разных поколений.
# Для удобства в списке вместо полных названий хранятся только числа, они обозначают модель
# и поколение видеокарты.
# Недавно компания выпустила новую линейку видеокарт, и в итоге самые старшие поколения
# разобрали за пару дней.
# Напишите программу, которая удаляет из этого списка видеокарт наибольшие элементы.
#
# Пример:
# Кол-во видеокарт: 5
# 1 Видеокарта: 3070
# 2 Видеокарта: 2060
# 3 Видеокарта: 3090
# 4 Видеокарта: 3070
# 5 Видеокарта: 3090

# Старый список видеокарт: [ 3070 2060 3090 3070 3090 ]
# Новый список видеокарт: [ 3070 2060 3070 ]

# N=int(input('введите количество видеокарт '))
# old_videocart=[]
# new_videocart=[]
# for i in range(1,N+1):
#     print(i,'видеокарта ',end='')
#     model = (input())
#     old_videocart.append(model)
#     if model != '3090':
#         new_videocart.append(model)
#
# print('старый список видеокарт',old_videocart)
# print('новый список видеокарт',new_videocart)
# Задача 5. Кино
# Илья зашёл на один любительский киносайт, где пользователи пишут рецензии на фильмы.
# Вот, кстати, список этих фильмов:
#
# films = [‘Крепкий орешек’, ‘Назад в будущее’, ‘Таксист’, ‘Леон’, ‘Богемская рапсодия’,
# ‘Город грехов’, ‘Мементо’, ‘Отступники’, ‘Деревня’]
#
# Илья на сайте в первый раз, он хочет зарегистрироваться и сразу
# добавить некоторые фильмы в список своих любимых, чтобы потом почитать рецензии на них.
# Напишите программу, в которой пользователь вводит фильм, и если он есть в списке,
# то он добавляется в список любимых. Если его нет, то выводится ошибка. В конце выведите весь список любимых фильмов.

# films = ['Крепкий орешек', 'Назад в будущее', 'Таксист', 'Леон', 'Богемская рапсодия',
# 'Город грехов', 'Мементо', 'Отступники', 'Деревня']
# myfilms=[]
# while True:
#     search=input('введите фильм ')
#     count=0
#     for i in films:
#         if search==i:
#             myfilms.append(search)
#             count+=1
#     else:
#         if count==0:
#             print('такого фильма нет')
#         if count!=0:
#             print(myfilms)
#
# Задача 6. Анализ слова
# Мы пишем программу — анализатор слов, чтобы потом, возможно, использовать
# её для тренировки нейросети, которая будет генерировать нужный нам текст.
# Пользователь вводит слово. Напишите программу, которая считает количество
# уникальных букв в слове. Уникальные буквы — это те, которые встречаются всего один раз.
#
# Пример 1:
# Введите слово: привет
# Кол-во уникальных букв: 6
#
# Пример 2:
# Введите слово: лава
# Кол-во уникальных букв: 2

# word = input('введите слово ')
# unik = 0
# count = 0
# for ii in word:
#     count = 0
#     for i in word:  # остальные буквы
#         if ii != i:
#             count = count + 1
#     if count == len(word) - 1:
#         unik += 1
#
# print('Кол-во уникальных букв:', unik)

# def main():
#     number = int(input('Кол-во контейнеров: '))
#     containers = []
#     row = 0
#     for i in range(number):
#         while True:
#             query_string = 'Введите вес ' + str(i + 1) + ' контейнера: '
#             weight = int(input(query_string))
#             if weight <= 200:
#                 break
#         containers.append(weight)
#
#     new_weight = int(input('Введите вес нового контейнера: '))
#     for c in range(len(containers)):
#         row = c + 1
#         if containers[c] < new_weight:
#             break
#     print('Номер, куда встанет новый контейнер:', row)
#
# main()
# Задача 8. Бегущие цифры
# start=[1, 4, -3, 0, 10]
# end=[]
# print(start)
# a=3
# for i in range(len(start)):
#     end.append(start[i-a])
#
# print (end)


word = input('Введите слово: ')
print('Слово является палиндромом' if word == word[::-1] else 'Слово не является палиндромом')


